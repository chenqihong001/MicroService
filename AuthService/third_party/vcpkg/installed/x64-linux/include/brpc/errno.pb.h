// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/errno.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_brpc_2ferrno_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_brpc_2ferrno_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_brpc_2ferrno_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_brpc_2ferrno_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_brpc_2ferrno_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace brpc {
enum Errno : int {
  ENOSERVICE = 1001,
  ENOMETHOD = 1002,
  EREQUEST = 1003,
  ERPCAUTH = 1004,
  ETOOMANYFAILS = 1005,
  EPCHANFINISH = 1006,
  EBACKUPREQUEST = 1007,
  ERPCTIMEDOUT = 1008,
  EFAILEDSOCKET = 1009,
  EHTTP = 1010,
  EOVERCROWDED = 1011,
  ERTMPPUBLISHABLE = 1012,
  ERTMPCREATESTREAM = 1013,
  EEOF = 1014,
  EUNUSED = 1015,
  ESSL = 1016,
  EH2RUNOUTSTREAMS = 1017,
  EREJECT = 1018,
  EINTERNAL = 2001,
  ERESPONSE = 2002,
  ELOGOFF = 2003,
  ELIMIT = 2004,
  ECLOSE = 2005,
  EITP = 2006,
  ESHUTDOWNWRITE = 2007,
  ERDMA = 3001,
  ERDMAMEM = 3002,
};

bool Errno_IsValid(int value);
extern const uint32_t Errno_internal_data_[];
constexpr Errno Errno_MIN = static_cast<Errno>(1001);
constexpr Errno Errno_MAX = static_cast<Errno>(3002);
constexpr int Errno_ARRAYSIZE = 3002 + 1;
const ::google::protobuf::EnumDescriptor*
Errno_descriptor();
template <typename T>
const std::string& Errno_Name(T value) {
  static_assert(std::is_same<T, Errno>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Errno_Name().");
  return ::google::protobuf::internal::NameOfEnum(Errno_descriptor(), value);
}
inline bool Errno_Parse(absl::string_view name, Errno* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Errno>(
      Errno_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::brpc::Errno> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::brpc::Errno>() {
  return ::brpc::Errno_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_brpc_2ferrno_2eproto_2epb_2eh

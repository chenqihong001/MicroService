// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/streaming_rpc_meta.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_brpc_2fstreaming_5frpc_5fmeta_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_brpc_2fstreaming_5frpc_5fmeta_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_brpc_2fstreaming_5frpc_5fmeta_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_brpc_2fstreaming_5frpc_5fmeta_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_brpc_2fstreaming_5frpc_5fmeta_2eproto;
namespace brpc {
class Feedback;
struct FeedbackDefaultTypeInternal;
extern FeedbackDefaultTypeInternal _Feedback_default_instance_;
class StreamFrameMeta;
struct StreamFrameMetaDefaultTypeInternal;
extern StreamFrameMetaDefaultTypeInternal _StreamFrameMeta_default_instance_;
class StreamSettings;
struct StreamSettingsDefaultTypeInternal;
extern StreamSettingsDefaultTypeInternal _StreamSettings_default_instance_;
}  // namespace brpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace brpc {
enum FrameType : int {
  FRAME_TYPE_UNKNOWN = 0,
  FRAME_TYPE_RST = 1,
  FRAME_TYPE_CLOSE = 2,
  FRAME_TYPE_DATA = 3,
  FRAME_TYPE_FEEDBACK = 4,
};

bool FrameType_IsValid(int value);
extern const uint32_t FrameType_internal_data_[];
constexpr FrameType FrameType_MIN = static_cast<FrameType>(0);
constexpr FrameType FrameType_MAX = static_cast<FrameType>(4);
constexpr int FrameType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
FrameType_descriptor();
template <typename T>
const std::string& FrameType_Name(T value) {
  static_assert(std::is_same<T, FrameType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FrameType_Name().");
  return FrameType_Name(static_cast<FrameType>(value));
}
template <>
inline const std::string& FrameType_Name(FrameType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FrameType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool FrameType_Parse(absl::string_view name, FrameType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameType>(
      FrameType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StreamSettings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.StreamSettings) */ {
 public:
  inline StreamSettings() : StreamSettings(nullptr) {}
  ~StreamSettings() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamSettings(::google::protobuf::internal::ConstantInitialized);

  inline StreamSettings(const StreamSettings& from)
      : StreamSettings(nullptr, from) {}
  StreamSettings(StreamSettings&& from) noexcept
    : StreamSettings() {
    *this = ::std::move(from);
  }

  inline StreamSettings& operator=(const StreamSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamSettings& operator=(StreamSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamSettings* internal_default_instance() {
    return reinterpret_cast<const StreamSettings*>(
               &_StreamSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StreamSettings& a, StreamSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamSettings* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamSettings& from) {
    StreamSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamSettings* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brpc.StreamSettings";
  }
  protected:
  explicit StreamSettings(::google::protobuf::Arena* arena);
  StreamSettings(::google::protobuf::Arena* arena, const StreamSettings& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStreamIdFieldNumber = 1,
    kNeedFeedbackFieldNumber = 2,
    kWritableFieldNumber = 3,
  };
  // required int64 stream_id = 1;
  bool has_stream_id() const;
  void clear_stream_id() ;
  ::int64_t stream_id() const;
  void set_stream_id(::int64_t value);

  private:
  ::int64_t _internal_stream_id() const;
  void _internal_set_stream_id(::int64_t value);

  public:
  // optional bool need_feedback = 2 [default = false];
  bool has_need_feedback() const;
  void clear_need_feedback() ;
  bool need_feedback() const;
  void set_need_feedback(bool value);

  private:
  bool _internal_need_feedback() const;
  void _internal_set_need_feedback(bool value);

  public:
  // optional bool writable = 3 [default = false];
  bool has_writable() const;
  void clear_writable() ;
  bool writable() const;
  void set_writable(bool value);

  private:
  bool _internal_writable() const;
  void _internal_set_writable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:brpc.StreamSettings)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t stream_id_;
    bool need_feedback_;
    bool writable_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_brpc_2fstreaming_5frpc_5fmeta_2eproto;
};// -------------------------------------------------------------------

class Feedback final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.Feedback) */ {
 public:
  inline Feedback() : Feedback(nullptr) {}
  ~Feedback() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Feedback(::google::protobuf::internal::ConstantInitialized);

  inline Feedback(const Feedback& from)
      : Feedback(nullptr, from) {}
  Feedback(Feedback&& from) noexcept
    : Feedback() {
    *this = ::std::move(from);
  }

  inline Feedback& operator=(const Feedback& from) {
    CopyFrom(from);
    return *this;
  }
  inline Feedback& operator=(Feedback&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Feedback& default_instance() {
    return *internal_default_instance();
  }
  static inline const Feedback* internal_default_instance() {
    return reinterpret_cast<const Feedback*>(
               &_Feedback_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Feedback& a, Feedback& b) {
    a.Swap(&b);
  }
  inline void Swap(Feedback* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Feedback* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Feedback* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Feedback>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Feedback& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Feedback& from) {
    Feedback::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Feedback* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brpc.Feedback";
  }
  protected:
  explicit Feedback(::google::protobuf::Arena* arena);
  Feedback(::google::protobuf::Arena* arena, const Feedback& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConsumedSizeFieldNumber = 1,
  };
  // optional int64 consumed_size = 1;
  bool has_consumed_size() const;
  void clear_consumed_size() ;
  ::int64_t consumed_size() const;
  void set_consumed_size(::int64_t value);

  private:
  ::int64_t _internal_consumed_size() const;
  void _internal_set_consumed_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:brpc.Feedback)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t consumed_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_brpc_2fstreaming_5frpc_5fmeta_2eproto;
};// -------------------------------------------------------------------

class StreamFrameMeta final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.StreamFrameMeta) */ {
 public:
  inline StreamFrameMeta() : StreamFrameMeta(nullptr) {}
  ~StreamFrameMeta() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamFrameMeta(::google::protobuf::internal::ConstantInitialized);

  inline StreamFrameMeta(const StreamFrameMeta& from)
      : StreamFrameMeta(nullptr, from) {}
  StreamFrameMeta(StreamFrameMeta&& from) noexcept
    : StreamFrameMeta() {
    *this = ::std::move(from);
  }

  inline StreamFrameMeta& operator=(const StreamFrameMeta& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamFrameMeta& operator=(StreamFrameMeta&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamFrameMeta& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamFrameMeta* internal_default_instance() {
    return reinterpret_cast<const StreamFrameMeta*>(
               &_StreamFrameMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StreamFrameMeta& a, StreamFrameMeta& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamFrameMeta* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamFrameMeta* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamFrameMeta* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamFrameMeta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamFrameMeta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamFrameMeta& from) {
    StreamFrameMeta::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamFrameMeta* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brpc.StreamFrameMeta";
  }
  protected:
  explicit StreamFrameMeta(::google::protobuf::Arena* arena);
  StreamFrameMeta(::google::protobuf::Arena* arena, const StreamFrameMeta& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeedbackFieldNumber = 5,
    kStreamIdFieldNumber = 1,
    kSourceStreamIdFieldNumber = 2,
    kFrameTypeFieldNumber = 3,
    kHasContinuationFieldNumber = 4,
  };
  // optional .brpc.Feedback feedback = 5;
  bool has_feedback() const;
  void clear_feedback() ;
  const ::brpc::Feedback& feedback() const;
  PROTOBUF_NODISCARD ::brpc::Feedback* release_feedback();
  ::brpc::Feedback* mutable_feedback();
  void set_allocated_feedback(::brpc::Feedback* value);
  void unsafe_arena_set_allocated_feedback(::brpc::Feedback* value);
  ::brpc::Feedback* unsafe_arena_release_feedback();

  private:
  const ::brpc::Feedback& _internal_feedback() const;
  ::brpc::Feedback* _internal_mutable_feedback();

  public:
  // required int64 stream_id = 1;
  bool has_stream_id() const;
  void clear_stream_id() ;
  ::int64_t stream_id() const;
  void set_stream_id(::int64_t value);

  private:
  ::int64_t _internal_stream_id() const;
  void _internal_set_stream_id(::int64_t value);

  public:
  // optional int64 source_stream_id = 2;
  bool has_source_stream_id() const;
  void clear_source_stream_id() ;
  ::int64_t source_stream_id() const;
  void set_source_stream_id(::int64_t value);

  private:
  ::int64_t _internal_source_stream_id() const;
  void _internal_set_source_stream_id(::int64_t value);

  public:
  // optional .brpc.FrameType frame_type = 3;
  bool has_frame_type() const;
  void clear_frame_type() ;
  ::brpc::FrameType frame_type() const;
  void set_frame_type(::brpc::FrameType value);

  private:
  ::brpc::FrameType _internal_frame_type() const;
  void _internal_set_frame_type(::brpc::FrameType value);

  public:
  // optional bool has_continuation = 4;
  bool has_has_continuation() const;
  void clear_has_continuation() ;
  bool has_continuation() const;
  void set_has_continuation(bool value);

  private:
  bool _internal_has_continuation() const;
  void _internal_set_has_continuation(bool value);

  public:
  // @@protoc_insertion_point(class_scope:brpc.StreamFrameMeta)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::brpc::Feedback* feedback_;
    ::int64_t stream_id_;
    ::int64_t source_stream_id_;
    int frame_type_;
    bool has_continuation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_brpc_2fstreaming_5frpc_5fmeta_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StreamSettings

// required int64 stream_id = 1;
inline bool StreamSettings::has_stream_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StreamSettings::clear_stream_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stream_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t StreamSettings::stream_id() const {
  // @@protoc_insertion_point(field_get:brpc.StreamSettings.stream_id)
  return _internal_stream_id();
}
inline void StreamSettings::set_stream_id(::int64_t value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:brpc.StreamSettings.stream_id)
}
inline ::int64_t StreamSettings::_internal_stream_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stream_id_;
}
inline void StreamSettings::_internal_set_stream_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stream_id_ = value;
}

// optional bool need_feedback = 2 [default = false];
inline bool StreamSettings::has_need_feedback() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StreamSettings::clear_need_feedback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.need_feedback_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool StreamSettings::need_feedback() const {
  // @@protoc_insertion_point(field_get:brpc.StreamSettings.need_feedback)
  return _internal_need_feedback();
}
inline void StreamSettings::set_need_feedback(bool value) {
  _internal_set_need_feedback(value);
  // @@protoc_insertion_point(field_set:brpc.StreamSettings.need_feedback)
}
inline bool StreamSettings::_internal_need_feedback() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.need_feedback_;
}
inline void StreamSettings::_internal_set_need_feedback(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.need_feedback_ = value;
}

// optional bool writable = 3 [default = false];
inline bool StreamSettings::has_writable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StreamSettings::clear_writable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.writable_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool StreamSettings::writable() const {
  // @@protoc_insertion_point(field_get:brpc.StreamSettings.writable)
  return _internal_writable();
}
inline void StreamSettings::set_writable(bool value) {
  _internal_set_writable(value);
  // @@protoc_insertion_point(field_set:brpc.StreamSettings.writable)
}
inline bool StreamSettings::_internal_writable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.writable_;
}
inline void StreamSettings::_internal_set_writable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.writable_ = value;
}

// -------------------------------------------------------------------

// StreamFrameMeta

// required int64 stream_id = 1;
inline bool StreamFrameMeta::has_stream_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StreamFrameMeta::clear_stream_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stream_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t StreamFrameMeta::stream_id() const {
  // @@protoc_insertion_point(field_get:brpc.StreamFrameMeta.stream_id)
  return _internal_stream_id();
}
inline void StreamFrameMeta::set_stream_id(::int64_t value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:brpc.StreamFrameMeta.stream_id)
}
inline ::int64_t StreamFrameMeta::_internal_stream_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stream_id_;
}
inline void StreamFrameMeta::_internal_set_stream_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stream_id_ = value;
}

// optional int64 source_stream_id = 2;
inline bool StreamFrameMeta::has_source_stream_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StreamFrameMeta::clear_source_stream_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_stream_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t StreamFrameMeta::source_stream_id() const {
  // @@protoc_insertion_point(field_get:brpc.StreamFrameMeta.source_stream_id)
  return _internal_source_stream_id();
}
inline void StreamFrameMeta::set_source_stream_id(::int64_t value) {
  _internal_set_source_stream_id(value);
  // @@protoc_insertion_point(field_set:brpc.StreamFrameMeta.source_stream_id)
}
inline ::int64_t StreamFrameMeta::_internal_source_stream_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_stream_id_;
}
inline void StreamFrameMeta::_internal_set_source_stream_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_stream_id_ = value;
}

// optional .brpc.FrameType frame_type = 3;
inline bool StreamFrameMeta::has_frame_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void StreamFrameMeta::clear_frame_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frame_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::brpc::FrameType StreamFrameMeta::frame_type() const {
  // @@protoc_insertion_point(field_get:brpc.StreamFrameMeta.frame_type)
  return _internal_frame_type();
}
inline void StreamFrameMeta::set_frame_type(::brpc::FrameType value) {
  _internal_set_frame_type(value);
  // @@protoc_insertion_point(field_set:brpc.StreamFrameMeta.frame_type)
}
inline ::brpc::FrameType StreamFrameMeta::_internal_frame_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::brpc::FrameType>(_impl_.frame_type_);
}
inline void StreamFrameMeta::_internal_set_frame_type(::brpc::FrameType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::brpc::FrameType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.frame_type_ = value;
}

// optional bool has_continuation = 4;
inline bool StreamFrameMeta::has_has_continuation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void StreamFrameMeta::clear_has_continuation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_continuation_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool StreamFrameMeta::has_continuation() const {
  // @@protoc_insertion_point(field_get:brpc.StreamFrameMeta.has_continuation)
  return _internal_has_continuation();
}
inline void StreamFrameMeta::set_has_continuation(bool value) {
  _internal_set_has_continuation(value);
  // @@protoc_insertion_point(field_set:brpc.StreamFrameMeta.has_continuation)
}
inline bool StreamFrameMeta::_internal_has_continuation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_continuation_;
}
inline void StreamFrameMeta::_internal_set_has_continuation(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.has_continuation_ = value;
}

// optional .brpc.Feedback feedback = 5;
inline bool StreamFrameMeta::has_feedback() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.feedback_ != nullptr);
  return value;
}
inline void StreamFrameMeta::clear_feedback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.feedback_ != nullptr) _impl_.feedback_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::brpc::Feedback& StreamFrameMeta::_internal_feedback() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::brpc::Feedback* p = _impl_.feedback_;
  return p != nullptr ? *p : reinterpret_cast<const ::brpc::Feedback&>(::brpc::_Feedback_default_instance_);
}
inline const ::brpc::Feedback& StreamFrameMeta::feedback() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:brpc.StreamFrameMeta.feedback)
  return _internal_feedback();
}
inline void StreamFrameMeta::unsafe_arena_set_allocated_feedback(::brpc::Feedback* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.feedback_);
  }
  _impl_.feedback_ = reinterpret_cast<::brpc::Feedback*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:brpc.StreamFrameMeta.feedback)
}
inline ::brpc::Feedback* StreamFrameMeta::release_feedback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::brpc::Feedback* released = _impl_.feedback_;
  _impl_.feedback_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::brpc::Feedback* StreamFrameMeta::unsafe_arena_release_feedback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:brpc.StreamFrameMeta.feedback)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::brpc::Feedback* temp = _impl_.feedback_;
  _impl_.feedback_ = nullptr;
  return temp;
}
inline ::brpc::Feedback* StreamFrameMeta::_internal_mutable_feedback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.feedback_ == nullptr) {
    auto* p = CreateMaybeMessage<::brpc::Feedback>(GetArena());
    _impl_.feedback_ = reinterpret_cast<::brpc::Feedback*>(p);
  }
  return _impl_.feedback_;
}
inline ::brpc::Feedback* StreamFrameMeta::mutable_feedback() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::brpc::Feedback* _msg = _internal_mutable_feedback();
  // @@protoc_insertion_point(field_mutable:brpc.StreamFrameMeta.feedback)
  return _msg;
}
inline void StreamFrameMeta::set_allocated_feedback(::brpc::Feedback* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::brpc::Feedback*>(_impl_.feedback_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::brpc::Feedback*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.feedback_ = reinterpret_cast<::brpc::Feedback*>(value);
  // @@protoc_insertion_point(field_set_allocated:brpc.StreamFrameMeta.feedback)
}

// -------------------------------------------------------------------

// Feedback

// optional int64 consumed_size = 1;
inline bool Feedback::has_consumed_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Feedback::clear_consumed_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.consumed_size_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Feedback::consumed_size() const {
  // @@protoc_insertion_point(field_get:brpc.Feedback.consumed_size)
  return _internal_consumed_size();
}
inline void Feedback::set_consumed_size(::int64_t value) {
  _internal_set_consumed_size(value);
  // @@protoc_insertion_point(field_set:brpc.Feedback.consumed_size)
}
inline ::int64_t Feedback::_internal_consumed_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.consumed_size_;
}
inline void Feedback::_internal_set_consumed_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.consumed_size_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::brpc::FrameType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::brpc::FrameType>() {
  return ::brpc::FrameType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_brpc_2fstreaming_5frpc_5fmeta_2eproto_2epb_2eh
